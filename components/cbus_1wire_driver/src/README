    cbus_driver_t *owbus = (cbus_driver_t *)ow_get_bus();
    cbus_device_config_t ow_device_config = {
        .bus_type = CBUS_BUS_1WIRE,
        .ow_device = {
            .data_gpio = GPIO_NUM_32,
            .rom_code = {
                //.raw_address = {0xDB, 0x04, 0x16, 0x74, 0xA7, 0x8C, 0xFF, 0x28}
                .raw_address = {0x28, 0xFF, 0x8C, 0xA7, 0x74, 0x16, 0x04, 0xDB}
            },
            .reserved = 0
        }
    };

    uint8_t scanbuf[128];

    cbus_common_cmd_t scancmd = (cbus_common_cmd_t) {
        .command = CBUSCMD_SCAN,
        .device_id = 0,
        .inDataLen = 0,
        .outDataLen = 0,
        .data = scanbuf
    };
    /*
    *((gpio_num_t *)scanbuf) = GPIO_NUM_32;
    cbus_common_id_t codes = owbus->execute(&scancmd);    
    printf("Return code 0x%02X - Device(s): %lu %016llX\n", codes.error, codes.id, *((uint64_t *)scancmd.data));
    */
    cbus_common_id_t retcode = owbus->attach(&ow_device_config);
    
    uint8_t buf[128];

    cbus_common_cmd_t cmd = (cbus_common_cmd_t) {
        .command = CBUSCMD_RESET,
        .device_id = retcode.id,
        .inDataLen = 4,
        .outDataLen = 9,    //Scratchpad
        .data = buf
    };
    owbus->execute(&cmd);
    cmd.data[0] = 0x4E;
    cmd.data[1] = 0x53;
    cmd.data[2] = 0x21;
    cmd.data[3] = 0x5F;
    cmd.command = CBUSCMD_WRITE;
    owbus->execute(&cmd);

    cmd.command = CBUSCMD_RESET;
    owbus->execute(&cmd);

    cmd.data[0] = 0x44;
    cmd.inDataLen = 1;
    cmd.command = CBUSCMD_WRITE;
    owbus->execute(&cmd);

    vTaskDelay(pdMS_TO_TICKS(800));

    cmd.command = CBUSCMD_RESET;
    owbus->execute(&cmd);

    cmd.command = CBUSCMD_READ;
    cmd.data[0] = 0xBE;
    cmd.inDataLen = 1;
    owbus->execute(&cmd);

    hexdump(cmd.data, 9);
    printf("0x%02X, 0x%02X\n", onewire_crc8(0, cmd.data, 8), onewire_crc8(0, cmd.data, 9));

    cmd.command = CBUSCMD_SCAN;
    retcode = owbus->execute(&cmd);
    printf("Return code 0x%02X - Device(s): %lu %016llX\n", retcode.error, retcode.id, *((uint64_t *)cmd.data));